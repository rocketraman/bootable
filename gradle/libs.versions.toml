[versions]
cfg4k = "0.9.6"
config = "1.4.3"
dokka = "2.0.0"
hoplite = "2.9.0-LOCAL"
junit-jupiter = "5.12.0"
kodein = "7.25.0"
kotlin = "2.1.10"
kotlinx-coroutines = "1.10.1"
ktor = "3.1.1"
log4j = "2.24.3"
log4j-kotlin-api = "1.5.0"

[plugins]
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
dokka-javadoc = { id = "org.jetbrains.dokka-javadoc", version.ref = "dokka" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }

[libraries]
# com.jdiazcano.cfg4k -> com.github.rocketraman.cfg4k temporarily
# see https://github.com/jdiazcano/cfg4k/issues/67
cfg4k-core = { module = "com.github.rocketraman.cfg4k:cfg4k-core", version.ref = "cfg4k" }
cfg4k-hocon = { module = "com.github.rocketraman.cfg4k:cfg4k-hocon", version.ref = "cfg4k" }

hoplite-core = { module = "com.sksamuel.hoplite:hoplite-core", version.ref = "hoplite" }
hoplite-hocon = { module = "com.sksamuel.hoplite:hoplite-hocon", version.ref = "hoplite" }

junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }

kodein-di = { module = "org.kodein.di:kodein-di", version.ref = "kodein" }

kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

ktor-html-builder = { module = "io.ktor:ktor-html-builder", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-metrics-micrometer = { module = "io.ktor:ktor-server-metrics-micrometer", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }

log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }
log4j-api-kotlin = { module = "org.apache.logging.log4j:log4j-api-kotlin", version.ref = "log4j-kotlin-api" }
log4j-bom = { module = "org.apache.logging.log4j:log4j-bom", version.ref = "log4j" }
log4j-iostreams = { module = "org.apache.logging.log4j:log4j-iostreams", version.ref = "log4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j-jul = { module = "org.apache.logging.log4j:log4j-jul", version.ref = "log4j" }
log4j-layout-template-json = { module = "org.apache.logging.log4j:log4j-layout-template-json", version.ref = "log4j" }
log4j-slf4j-impl = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }

typesafe-config = { module = "com.typesafe:config", version.ref = "config" }

[bundles]
hoplite = [
  "hoplite-core",
  "hoplite-hocon",
]
ktor = [
  "ktor-html-builder",
  "ktor-serialization",
  "ktor-serialization-kotlinx-json",
  "ktor-server-auth",
  "ktor-server-auth-jwt",
  "ktor-server-content-negotiation",
  "ktor-server-metrics-micrometer",
  "ktor-server-netty",
]
log4j-api = [
  "log4j-api",
  "log4j-api-kotlin",
]
log4j-impl = [
  "log4j-iostreams",
  "log4j-core",
  "log4j-jul",
  "log4j-layout-template-json",
  "log4j-slf4j-impl",
]
